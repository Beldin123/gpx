/* 

Executable demonstrates how the key exported gpx functions are used.

SUMMARY


This executable provides examples of how the gpx package can be used to solve 
linear programming (LP) and mixed integer linear programming (MILP) problems
via Cplex and the callable C routines.

The user must select one of the numbers corresponding to the command they wish
to execute from the following list:

  0 - EXIT program
  1 - solve sample LP problem (afiro) from MPS data file
  2 - solve sample MILP problem (noswot) from data structures
  3 - display solution

This program must executed from the same directory in which the program and the
sample files are located. If the program is executed from a different directory,
or if the sample files reside in a different directory than the executable, the 
following variables must be changed to contain the correct absolute path for each file:

  var sampleLpFile  string = "inputMpsLp1.txt"  // MPS file for LP example (afiro)
  var sampleMipFile string = "inputGpxMip1.txt" // Text file for MIP example (noswot)
  var fileNameSoln  string = "soln_file.txt"    // Solution file generated by Cplex
  var fileNameMps   string = "mps_file.txt"     // MPS file of the model generated by Cplex


Exit 

This option is used to terminate execution of the program.

Solve LP from MPS data file 

This option is used to have Cplex directly read a data file which defines the
model. The file name to be read as well as some other key parameters are hard-coded
in the wrapper code. The default MPS file provided with this example is "afiro" from
the netlib data set.

The sequence of operations and gpx functions exercised with this option is as follows:
	
	initialize       - set key parameters needed by the wrapper functions
	CreateProb       - initialize Cplex environment and create the problem
	OutputToScreen   - set Cplex output to be displayed to screen
	ReadCopyProb     - read model definition directly into Cplex
	LpOpt            - have Cplex solve the LP
	GetSolution      - populate the gpx data structures with the LP solution
	SolWrite         - save the Cplex solution in a file
	CloseCplex       - clean up and close the Cplex environment
	wpPrintSoln      - private function to display objective function value and,
	                   optionally, variable values, reduced cost, pi, and slack

The data files, which are provided and hard-coded in the two examples are:
	inputGpxMip1.txt - gpx format, NOSWOT MIP obtained from miplib
	inputMpsLp1.txt  - MPS format, AFIRO LP obtained from netlib



Solve MILP problem from data structures 

This option is used to populate the internal data structures by reading the model
definition from a text file prepared in a special format provided as part of this
example. In practice, these data structures would be populated transparently by the
companion lpo package, or by other functions written by users.

The file name to be read as well as some other key parameters are hard-coded
in the wrapper code. The default text file provided with this example is "noswot" from
the netlib data set.

The sequence of operations and gpx functions exercised with this option is as follows:
	
	initialize       - read file to populate data structures and initialize variables
	CreateProb       - initialize Cplex environment and create the problem
	OutputToScreen   - set Cplex output to be displayed to screen or remain hidden
	NewRows          - create new rows
	NewCols          - create new columns
	ChgCoefList      - set non-zero coefficients for rows and columns
	MipOpt           - have Cplex solve the MIP
	GetMipSolution   - populate the data structures with the MIP solution
	SolWrite         - save the Cplex solution in a file
	ReadCopyProb     - save the model in an MPS file
	CloseCplex       - clean up and close the Cplex environment
	wpPrintSoln      - private function to display objective function value and,
	                   optionally, variable values, reduced cost, pi, and slack
	
Display solution

This option is used to display the solution provided by Cplex and contained in the
solution data structures of gpx.


*/
package main